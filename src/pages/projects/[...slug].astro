---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import { config } from '../../config';

export async function getStaticPaths() {
	const projects = await getCollection('projects');
	return projects.map((project) => ({
		params: { slug: project.slug },
		props: project,
	}));
}

const project = Astro.props;
const { Content } = await project.render();
---

<Layout title={`${project.data.title} - ${config.title}`} description={project.data.description || project.data.excerpt}>
	<article class="project-detail">
		<header class="project-header">
			<div class="header-content">
				<h1 class="project-title">{project.data.title}</h1>
				{project.data.featured && <span class="featured-badge">Featured Project</span>}
			</div>
			
			<div class="project-meta">
				<div class="meta-item">
					<span class="meta-label">Status</span>
					<span class="project-status status-{project.data.status}">{project.data.status}</span>
				</div>
				<div class="meta-item">
					<span class="meta-label">Started</span>
					<time class="project-date">{project.data.date.toLocaleDateString('en-US', { 
						year: 'numeric', 
						month: 'long',
						day: 'numeric'
					})}</time>
				</div>
			</div>

			{project.data.description && (
				<p class="project-description">{project.data.description}</p>
			)}

			{(project.data.image || project.data.legacyImage) && (
				<div class="project-preview">
					{project.data.image ? (
						<Image 
							src={project.data.image} 
							alt={`${project.data.title} preview`}
							width={900}
							height={600}
							format="webp"
							quality={85}
						/>
					) : (
						<img src={project.data.legacyImage} alt={`${project.data.title} preview`} />
					)}
				</div>
			)}

			<div class="project-links">
				{project.data.githubUrl && (
					<a href={project.data.githubUrl} target="_blank" rel="noopener" class="link-button github">
						View on GitHub
					</a>
				)}
				{project.data.liveUrl && (
					<a href={project.data.liveUrl} target="_blank" rel="noopener" class="link-button live">
						Live Demo
					</a>
				)}
			</div>

			{project.data.technologies.length > 0 && (
				<div class="technologies">
					<h3>Technologies Used</h3>
					<div class="tech-list">
						{project.data.technologies.map((tech) => (
							<span class="tech-badge">{tech}</span>
						))}
					</div>
				</div>
			)}
		</header>

		<div class="project-content">
			<Content />
		</div>

		<footer class="project-footer">
			<div class="nav-links">
				<a href="/projects" class="back-link">‚Üê Back to Projects</a>
			</div>
		</footer>
	</article>
</Layout>

<style>
	.project-detail {
		max-width: 900px;
		margin: 0 auto;
	}

	.project-header {
		margin-bottom: calc(var(--grid-unit) * 6);
		padding-bottom: calc(var(--grid-unit) * 4);
		border-bottom: 4px solid var(--color-accent);
	}

	.header-content {
		display: flex;
		align-items: center;
		gap: calc(var(--grid-unit) * 3);
		flex-wrap: wrap;
		margin-bottom: calc(var(--grid-unit) * 3);
	}

	.project-title {
		font-size: 3rem;
		margin: 0;
	}

	.featured-badge {
		background-color: var(--color-accent);
		color: white;
		padding: calc(var(--grid-unit)) calc(var(--grid-unit) * 2);
		font-family: var(--font-heading-secondary);
		font-size: 0.875rem;
		font-weight: 700;
		text-transform: uppercase;
		letter-spacing: 0.1em;
		border-radius: 4px;
	}

	.project-meta {
		display: flex;
		gap: calc(var(--grid-unit) * 4);
		margin-bottom: calc(var(--grid-unit) * 3);
		flex-wrap: wrap;
	}

	.meta-item {
		display: flex;
		flex-direction: column;
		gap: calc(var(--grid-unit) / 2);
	}

	.meta-label {
		font-family: var(--font-mono);
		font-size: 0.75rem;
		color: var(--color-text-muted);
		text-transform: uppercase;
		letter-spacing: 0.1em;
	}

	.project-status {
		font-family: var(--font-heading-secondary);
		font-size: 0.875rem;
		padding: calc(var(--grid-unit) / 2) calc(var(--grid-unit));
		border-radius: 4px;
		text-transform: uppercase;
		letter-spacing: 0.05em;
		font-weight: 700;
		display: inline-block;
	}

	.status-completed {
		background-color: #10b981;
		color: white;
	}

	.status-in-progress {
		background-color: #f59e0b;
		color: white;
	}

	.status-planned {
		background-color: #6b7280;
		color: white;
	}

	.project-date {
		font-family: var(--font-heading-secondary);
		font-size: 1rem;
		color: var(--color-text-primary);
		font-weight: 600;
	}

	.project-description {
		font-size: 1.25rem;
		line-height: 1.6;
		color: var(--color-text-secondary);
		margin-bottom: calc(var(--grid-unit) * 3);
	}

	.project-preview {
		margin: calc(var(--grid-unit) * 3) 0;
		border-radius: calc(var(--grid-unit));
		overflow: hidden;
		border: 2px solid var(--color-border);
		background-color: var(--color-surface);
	}

	.project-preview img {
		width: 100%;
		height: auto;
		display: block;
		border: none;
		margin: 0;
	}

	.project-links {
		display: flex;
		gap: calc(var(--grid-unit) * 2);
		margin-bottom: calc(var(--grid-unit) * 4);
		flex-wrap: wrap;
	}

	.link-button {
		font-family: var(--font-heading-secondary);
		font-weight: 700;
		text-transform: uppercase;
		letter-spacing: 0.05em;
		padding: calc(var(--grid-unit) * 1.5) calc(var(--grid-unit) * 3);
		border: 2px solid var(--color-border);
		border-radius: 4px;
		transition: all 0.2s ease;
		display: inline-block;
	}

	.link-button.github {
		background-color: var(--color-text-primary);
		color: var(--color-background);
		border-color: var(--color-text-primary);
	}

	.link-button.github:hover {
		background-color: var(--color-background);
		color: var(--color-text-primary);
		text-decoration: none;
	}

	.link-button.live {
		background-color: var(--color-accent);
		color: white;
		border-color: var(--color-accent);
	}

	.link-button.live:hover {
		background-color: var(--color-background);
		color: var(--color-accent);
		text-decoration: none;
	}

	.technologies {
		background-color: var(--color-surface);
		padding: calc(var(--grid-unit) * 3);
		border-radius: calc(var(--grid-unit));
		margin-top: calc(var(--grid-unit) * 4);
	}

	.technologies h3 {
		font-size: 1.25rem;
		margin-bottom: calc(var(--grid-unit) * 2);
	}

	.tech-list {
		display: flex;
		flex-wrap: wrap;
		gap: calc(var(--grid-unit));
	}

	.tech-badge {
		font-family: var(--font-mono);
		font-size: 0.875rem;
		padding: calc(var(--grid-unit) / 2) calc(var(--grid-unit) * 1.5);
		background-color: var(--color-background);
		border: 1px solid var(--color-border);
		border-radius: 4px;
		color: var(--color-text-primary);
	}

	.project-content {
		font-size: 1.125rem;
		line-height: 1.8;
		margin-bottom: calc(var(--grid-unit) * 6);
	}

	.project-content :global(h2) {
		margin-top: calc(var(--grid-unit) * 6);
		margin-bottom: calc(var(--grid-unit) * 3);
	}

	.project-content :global(h3) {
		margin-top: calc(var(--grid-unit) * 4);
		margin-bottom: calc(var(--grid-unit) * 2);
	}

	.project-content :global(ul),
	.project-content :global(ol) {
		margin-bottom: calc(var(--grid-unit) * 3);
	}

	.project-content :global(li) {
		margin-bottom: calc(var(--grid-unit));
		line-height: 1.8;
	}

	.project-footer {
		padding-top: calc(var(--grid-unit) * 4);
		border-top: 2px solid var(--color-border);
	}

	.nav-links {
		display: flex;
		justify-content: center;
	}

	.back-link {
		font-family: var(--font-heading-secondary);
		font-weight: 700;
		text-transform: uppercase;
		letter-spacing: 0.1em;
		font-size: 0.875rem;
	}

	@media (max-width: 768px) {
		.project-title {
			font-size: 2rem;
		}

		.project-meta {
			gap: calc(var(--grid-unit) * 3);
		}

		.project-description {
			font-size: 1.125rem;
		}
	}
</style>